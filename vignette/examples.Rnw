\documentclass[a4paper,justified,openany]{tufte-handout}
\setcounter{secnumdepth}{2}

\usepackage{microtype}
% -------------------------------------------------------------------------------

%\usepackage{cite} % Make references as [1-4], not [1,2,3,4]
\usepackage{url}  % Formatting web addresses  
%\usepackage[utf8]{inputenc} %unicode support
%\usepackage{epsfig}
\usepackage{color,hyperref,comment, booktabs}
\urlstyle{rm}
\usepackage{algorithmic, algorithm}
\newcommand{\cc}{\texttt}
\newcommand{\xmin}{x_{\min}}

\newcommand{\note}[1]{{\color{red}#1}}

\usepackage{etoolbox}
\makeatletter
\preto{\@verbatim}{\topsep=-20pt \partopsep=0pt }
\makeatother

\date{Last updated: \today}  % if the \date{} command is left out, the current date will be used

\title{The poweRlaw package: Examples}
\author[Colin S. Gillespie]{Colin S. Gillespie}
\date{Last updated: \today}

<<echo=FALSE>>=
opts_chunk$set(prompt = FALSE,fig.path='graphics/', fig.align='center',fig.lp="")
options(width=75)
knit_theme$set(knit_theme$get()[7])
setnicepar = function(...)  par(mar=c(3,3,2,1), 
                  mgp=c(2,0.4,0), tck=-.01,
                  cex.axis=0.9, las=1, ...)
set.seed(1)
@

\begin{document}
\maketitle
 \begin{abstract}
The \verb$poweRlaw$ package provides code to fit heavy tailed distributions, including discrete and continuous power-law distributions. 
The fitting procedure follows the method detailed in Clauset \textit{et al.}\cite{clauset2009}. This vignette works through a number of examples.
\end{abstract}

<<echo=FALSE, results='hide', message=FALSE, warning=FALSE, error=FALSE>>=
if(!file.exists("blackouts.txt"))
  download.file("http://goo.gl/BsqnP", destfile="blackouts.txt")
blackouts = read.table("blackouts.txt")
@


\section{The blackout data set}

The blackouts data set can be obtained from Clauset's website: \url{http://goo.gl/BsqnP} . }
<<eval=FALSE>>=
blackouts = read.table("blackouts.txt")
@
\noindent Distribution objects take vectors as inputs, so
<<>>=
m_bl = conpl$new(blackouts$V1)
@
\begin{marginfigure}[5\baselineskip]
\centering
\includegraphics[width=\textwidth]{graphics/figure6-crop}
\caption{CDF plot of the blackout dataset with line of best fit. Since the minimum value of $x$ is large, we fit a continuous power-law as this is more it efficient.}\label{F6}
\end{marginfigure}
<<echo=FALSE>>=
est = estimate_xmin(m_bl)
m_bl$setXmin(est)
pdf("graphics/figure6.pdf", width=4, height=4)
setnicepar(mfrow=c(1,1))
plot(m_bl)
lines(m_bl, col=2)
grid()
sink = dev.off()
system("pdfcrop graphics/figure6.pdf")
@



<<echo=FALSE, results='hide', message=FALSE, warning=FALSE, error=FALSE>>=
if(!file.exists("plfit.R"))
  download.file("http://tuvalu.santafe.edu/~aaronc/powerlaws/plfit.r", destfile="plfit.R")
source("plfit.R")


if(!file.exists("plpva.r"))
  download.file("http://tuvalu.santafe.edu/~aaronc/powerlaws/plpva.r", destfile="plpva.r")
source("plpva.r")
@

\section{Comparison with the \texttt{plfit} script}

\subsection{The discrete case}

Other implementations of estimating the lower bound can be found at
\begin{center}
\url{http://tuvalu.santafe.edu/~aaronc/powerlaws/}
\end{center}
In particular, the script for estimating $\xmin$ can be loaded using
<<eval=FALSE>>=
source("http://tuvalu.santafe.edu/~aaronc/powerlaws/plfit.r")
@
\noindent The results are directly comparable to the poweRlaw package. For example, if we look consider the Moby Dick data set again:
<<>>=
plfit(moby)
@
\noindent Notice that the results are slightly different. This is because the \cc{plfit} by default does a parameter scan over the range
\[
1.50, 1.51, 1.52, \ldots, 2.49, 2.50
\]
\noindent To exactly replicate the results, we could use
<<results='hide', eval=FALSE>>=
estimate_xmin(m_m, pars=seq(1.5, 2.5, 0.01))
@


\subsection{The continuous case}

The \texttt{plfit} script also fits continuous power-laws. Again the results are comparable. 

For example, suppose we have one thousand random numbers from a continuous power-law distributinos with parameters $\alpha = 2.5$ and $\xmin = 10.0$
<<>>=
r = rplcon(1000, 10, 2.5)
@
\noindent The \texttt{plfit} automatically detects if the data is continuous
<<>>=
plfit(r)
@
\noindent Fitting with the \texttt{poweRlaw} package gives the same values
<<>>=
m_r = conpl$new(r)
(est = estimate_xmin(m_r))
@
\noindent Of course, using the \texttt{poweRlaw} package we can easily plot the data
\begin{marginfigure}
\centering
\includegraphics[width=\textwidth]{graphics/figure7-crop}
\caption{CDF plot of one thousand random numbers generated from a power-law with parameters $\alpha=2.5$ and $\xmin = 10$. The line of best fit is also shown.}\label{F7}
\end{marginfigure}
<<fig.keep='none'>>=
m_r$setXmin(est)
plot(m_r)
lines(m_r, col=2)
@
\noindent to get figure \ref{F7}.

<<echo=FALSE>>=
pdf("graphics/figure7.pdf", width=4, height=4)
setnicepar(mfrow=c(1,1))
plot(m_r)
lines(m_r, col=2)
grid()
sink = dev.off()
system("pdfcrop graphics/figure7.pdf")
@



\clearpage


\bibliography{poweRlaw}
\bibliographystyle{plainnat}


\clearpage

\section*{Package and R version}

\begin{table}
\centering
\begin{tabular}{@{} llll @{}}
\toprule
Package & Version\\
\midrule
parallel & \Sexpr{packageDescription("parallel")$Version}\\
poweRlaw & \Sexpr{packageDescription("poweRlaw")$Version}\\
VGAM & \Sexpr{packageDescription("VGAM")$Version}\\
\bottomrule
\end{tabular}
\caption{A list of packages and versions used.}\label{A1}
\end{table}

<<>>=
version
@



\end{document}

<<echo=FALSE, eval=TRUE>>=
##Used to generate the figures for github
#setwd("../graphics/")
ppi = 50
png("../graphics/figure1.png", width=6*ppi, height=4*ppi, res=ppi)
setnicepar(mfrow=c(1, 2))
plot(m_m, xlab="x", ylab="CDF")
lines(m_m, col=2, lty=2)
grid()
plot(m_bl, xlab="x", ylab="CDF")
lines(m_bl, col=2, lty=2)
grid()
sink = dev.off()

png("../graphics/figure2.png", width=6*ppi, height=4*ppi, res=ppi)
setnicepar(mfrow=c(1,2))
hist(bs$bootstraps[,2], xlab="xmin", ylim=c(0, 2000), 
     xlim=c(0, 30), main=NULL, breaks="fd")
grid()
hist(bs$bootstraps[,3], xlab=expression(alpha), 
     ylim=c(0, 500), xlim=c(1.8, 2.1), main=NULL, 
     breaks="fd")
grid()
sink=dev.off()

mypalette
setwd("../vignettes/")
@

       
       
       
       
       
       
       
       
       
       
       
       
       
       


% eof